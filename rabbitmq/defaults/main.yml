---
# The 'rabbitmq' erlang cookie for two nodes to be able to communicate
rabbitmq_cookie: ""

# The 'rabbitmq' default environment variables
rabbitmq_env: {}

# The 'rabbitmq' limit of a file descriptors
rabbitmq_limit_nofile: 10240

# The 'rabbitmq' main configuration
rabbitmq_config: {}
  # rabbit:
    # Networking
    # ====================
    # Related doc guide: http://www.rabbitmq.com/networking.html.
    #
    # tcp_listeners: [5672]
    # ssl_listeners: [5671]
    # num_tcp_acceptors: 10
    # num_ssl_acceptors: 1
    # handshake_timeout: 10000
    # log_levels:
    #   - connection: info
    # reverse_dns_lookups: false

    # Security, Access Control
    # ========================
    # Related doc guide: http://www.rabbitmq.com/access-control.html.
    #
    # loopback_users: [<<"guest">>]
    # ssl_options:
    #   - cacertfile: /path/to/testca/cacert.pem
    #     certfile: /path/to/server/cert.pem
    #     keyfile: /path/to/server/key.pem
    #     verify: verify_peer
    #     fail_if_no_peer_cert: false
    # auth_mechanisms: [PLAIN, AMQPLAIN]
    # auth_backends: [rabbit_auth_backend_internal]
    # ssl_cert_login_from: distinguished_name
    # ssl_handshake_timeout: 5000
    # ssl_allow_poodle_attack: false
    # password_hashing_module: rabbit_password_hashing_sha256
    # config_entry_decoder:
    #   - cipher: aes_cbc256
    #     hash: sha512
    #     iterations: 1000

    # Default User / VHost
    # ====================
    #
    # default_vhost: <<"/">>
    # default_user: <<"guest">>
    # default_pass: <<"guest">>
    # default_permissions: [<<".*">>, <<".*">>, <<".*">>]
    # default_user_tags: [administrator]

    # Additional network and protocol related configuration
    # =====================================================
    #
    # heartbeat: 60
    # frame_max: 131072
    # initial_frame_max: 4096
    # channel_max: 0
    # connection_max: infinity
    # tcp_listen_options:
    #   - backlog: 128
    #     nodelay: true
    #     exit_on_close: false

    # Resource Limits & Flow Control
    # ==============================
    # Related doc guide: http://www.rabbitmq.com/memory.html, http://www.rabbitmq.com/memory-use.html.
    #
    # vm_memory_high_watermark: 0.4
    # vm_memory_high_watermark_paging_ratio: 0.5
    # vm_memory_calculation_strategy: rss
    # memory_monitor_interval: 2500
    # total_memory_available_override_value: 5000MB
    # disk_free_limit: 50000000

    #
    # Misc/Advanced Options
    # =====================
    #
    # queue_master_locator: <<"client-local">>
    # mirroring_sync_batch_size: 4096
    # mirroring_flow_control: true
    # server_properties: []
    # cluster_partition_handling: ignore
    # cluster_nodes: {"['rabbit@my.host.com']": disc}
    # cluster_keepalive_interval: 10000
    # collect_statistics: none
    # collect_statistics_interval: 5000
    # trace_vhosts: []
    # hipe_compile: false
    # delegate_count: 16
    # mnesia_table_loading_retry_limit: 10
    # mnesia_table_loading_retry_timeout: 30000
    # queue_index_embed_msgs_below: 4096
    # queue_index_max_journal_entries: 32768
    # msg_store_credit_disc_bound: {4000: 800}
    # msg_store_io_batch_size: 4096
    # credit_flow_default_credit: {400: 200}
    # channel_operation_timeout: 15000
    # queue_explicit_gc_run_operation_threshold: 1000
    # lazy_queue_explicit_gc_run_operation_threshold: 1000
    # disk_monitor_failure_retries: 10
    # disk_monitor_failure_retry_interval: 120000
    # background_gc_enabled: false
    # background_gc_target_interval: 60000
    # msg_store_file_size_limit: 16777216
    # fhc_write_buffering: true
    # fhc_read_buffering: false

  # ----------------------------------------------------------------------------
  # Advanced Erlang Networking/Clustering Options.
  #
  # Related doc guide: http://www.rabbitmq.com/clustering.html
  # ----------------------------------------------------------------------------

  # kernel:
    # net_ticktime: 60

  # ----------------------------------------------------------------------------
  # RabbitMQ Management Plugin
  #
  # Related doc guide: http://www.rabbitmq.com/management.html
  # ----------------------------------------------------------------------------

  # rabbitmq_management:
    # load_definitions: /path/to/exported/definitions.json
    # http_log_dir: /path/to/rabbitmq/logs/http
    # listener:
    #   - port: 12345
    #     ip: 127.0.0.1
    #     ssl: true
    #     ssl_opts:
    #       - cacertfile: /path/to/cacert.pem
    #         certfile: /path/to/cert.pem
    #         keyfile: /path/to/key.pem
    # rates_mode: basic
    # sample_retention_policies:
    #   - global:   [{60: 5}, {3600: 60}, {86400: 1200}]
    #     basic:    [{60: 5}, {3600: 60}]
    #     detailed: [{10: 5}]

  # ----------------------------------------------------------------------------
  # RabbitMQ Shovel Plugin
  #
  # Related doc guide: http://www.rabbitmq.com/shovel.html
  # ----------------------------------------------------------------------------

  # rabbitmq_shovel:
  #   - shovels:
  #     - my_first_shovel:
  #       - sources:
  #         - brokers: ["amqp://user:password@host.domain/my_vhost"]
  #           declarations: []
  #         destinations:
  #         - broker: "amqp://"
  #           declarations: []
  #         queue: <<"your-queue-name-goes-here">>
  #         prefetch_count: 10
  #         ack_mode: on_confirm
  #         publish_fields:
  #         - exchange: <<"my_exchange">>
  #           routing_key: <<"from_shovel">>
  #         publish_properties: [{delivery_mode: 2}]
  #         reconnect_delay: 2.5
  #   - defaults:
  #     - prefetch_count: 0
  #       ack_mode: on_confirm
  #       publish_fields: []
  #       publish_properties: [{delivery_mode: 2}]
  #       reconnect_delay: 2.5

  # ----------------------------------------------------------------------------
  # RabbitMQ STOMP Plugin
  #
  # Related doc guide: http://www.rabbitmq.com/stomp.html
  # ----------------------------------------------------------------------------

  # rabbitmq_stomp:
    # tcp_listeners:
    #   - "127.0.0.1": 61613
    #     "::1": 61613
    # ssl_listeners: [61614]
    # num_tcp_acceptors: 10
    # num_ssl_acceptors: 1
    # ssl_cert_login: true
    # default_user:
    #   - login: guest
    #     passcode: "guest"
    # implicit_connect: true

  # ----------------------------------------------------------------------------
  # RabbitMQ MQTT Plugin
  #
  # Related doc guide: https://github.com/rabbitmq/rabbitmq-mqtt/blob/stable/README.md
  # ----------------------------------------------------------------------------

  # rabbitmq_mqtt:
    # default_user: <<"guest">>
    # default_pass: <<"guest">>
    # allow_anonymous: true
    # vhost: <<"/">>
    # exchange: <<"amq.topic">>
    # subscription_ttl: 1800000
    # prefetch: 10
    # tcp_listeners: [1883]
    # ssl_listeners: []
    # num_tcp_acceptors: 10
    # num_ssl_acceptors: 1
    # tcp_listen_options:
    #   - backlog: 128
    #     linger: {true: 0}
    #     exit_on_close: false

  # ----------------------------------------------------------------------------
  # RabbitMQ AMQP 1.0 Support
  #
  # Related doc guide: https://github.com/rabbitmq/rabbitmq-amqp1.0/blob/stable/README.md
  # ----------------------------------------------------------------------------

  # rabbitmq_amqp1_0:
    # default_user: guest
    # protocol_strict_mode: false

  # ----------------------------------------------------------------------------
  # RabbitMQ LDAP Plugin
  #
  # Related doc guide: http://www.rabbitmq.com/ldap.html.
  # ----------------------------------------------------------------------------

  # rabbitmq_auth_backend_ldap:
    # Connecting to the LDAP server(s)
    # ================================
    # servers: ["your-server-name-goes-here"]
    # use_ssl: false
    # port: 389
    # timeout: infinity
    # log: false

    # Authentication
    # ==============
    # user_dn_pattern: cn=${username},ou=People,dc=example,dc=com
    # dn_lookup_attribute: userPrincipalName
    # dn_lookup_base: DC=gopivotal,DC=com
    # other_bind: as_user

    # Authorisation
    # =============
    # vhost_access_query:
    #   in_group: ou=${vhost}-users,ou=vhosts,dc=example,dc=com
    # resource_access_query: {constant: true}
    # tag_queries: []
